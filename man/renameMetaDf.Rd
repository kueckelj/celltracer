% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rename-content.R
\name{renameMetaDf}
\alias{renameMetaDf}
\alias{renameMetaDfWith}
\title{Rename meta variables}
\usage{
renameMetaDf(object, ..., phase = NULL)

renameMetaDfWith(object, .fn, .cols = dplyr::everything(), ..., phase = NULL)
}
\arguments{
\item{object}{A valid celltracer object.}

\item{...}{For \code{rename()}: <\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Use
\code{new_name = old_name} to rename selected variables.

For \code{rename_with()}: additional arguments passed onto \code{.fn}.}

\item{phase}{Character value. The ordinal value referring to the phase of interest (e.g. \emph{'first'}, \emph{'second'} etc.).
referring to the phase of interest. If set to NULL takes the phase denoted as default with \code{adjustDefault()}.

Ignored if the experiment design contains only one phase.}

\item{.fn}{A function used to transform the selected \code{.cols}. Should
return a character vector the same length as the input.}

\item{.cols}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Columns to rename;
defaults to all columns.}
}
\value{

}
\description{
Implementations of the functions \code{dplyr::rename()} and
\code{dplyr::rename_with()} that can be used to rename the variables of the cell meta
data.frame.
}
\details{
The variables \emph{cell_id, cell_line, condition,
well_plate_name, well_plate_index, well} and \emph{well_image} are removed
prior to the renaming as they are protected. The renaming process must not
result in columns that carry one of these names.

Use \code{getGroupingVariableNames()} to check if renaming resulted in
the desired output.
}
\seealso{
\code{dplyr::rename()}, \code{dplyr::rename_with()}
}
