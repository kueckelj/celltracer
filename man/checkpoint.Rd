% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkpoint.R
\name{checkpoint}
\alias{checkpoint}
\title{Shiny feedback messages}
\usage{
checkpoint(
  evaluate = TRUE,
  case_false = NULL,
  error_notifications = list(no_well_plate_chosen =
    "Please choose a well plate first.", invalid_image_number =
    "The number of images per well must not be 0.", invalid_wp_name =
    "Invalid or already existing well plate name.", missing_software =
    "Please choose the software from which the files derived.", no_well_plates_added =
    "No well plates have been added yet.", no_set_up_saved =
    "No experiment set up has been saved yet.", well_plates_not_ready =
    "There are still well plates left that do not match the requirements to be loaded.", 
        no_data_read_in = "No files have been loaded yet.", no_cells_remaining =
    "The filter criteria discard all cells. At least one cell must remain.", errors_left
    =
    "Trying to load some files resulted in errors. To proceed without them enable 'Ignore Errors'. If you want the files to be included fix the error and load the files again.",
    no_qc_data =
    "Data has to undergo quality check first before the cell tracer object can be returned.",
    no_features_selected = "Please selecte at least one feature."),
  warning_notifications = list(),
  duration = 4,
  stop_process = TRUE,
  stop_app = FALSE
)
}
\arguments{
\item{evaluate}{A vector of logical tests to be evaluated.}

\item{case_false}{A character string indicating the message to be displayed if one element of
\code{evaluate} turns out to be FALSE. Needs to be in \code{base::names(\code{error/warning_notifiations})}.}

\item{error_notifications}{A named list of character strings.}

\item{warning_notifications}{A named list of character strings.}

\item{duration}{The duration the message is displayed.}

\item{stop_process, stop_app}{Logical. What is supposed to happen if one element of \code{evaluate}
turns out to be FALSE.}
}
\value{
A shiny notification.
}
\description{
Wrapper around \code{shiny::req()} and \code{shiny::showNotification()}.
Prevents application from crashing and displays guiding message about what the user
is supposed to do in order to continue without this message to appear.
}
